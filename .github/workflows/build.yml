name: Build
on: [push, workflow_dispatch]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  OPENQASM_VERSION: v3.1.0
  ANTLR4_VERSION: 4.13.2

jobs:
  build:
    name: "Build parsers"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install antlr4-tools
        run: pip install antlr4-tools

      - name: Download latest OpenQASM specification
        run: wget https://github.com/openqasm/openqasm/archive/refs/tags/spec/$OPENQASM_VERSION.tar.gz
      - name: Unpack specification
        run: tar -xf $OPENQASM_VERSION.tar.gz

      - name: Compile parsers
        run: |
          mkdir pages
          cd openqasm-spec-$OPENQASM_VERSION/source/grammar
          antlr4 -v $ANTLR4_VERSION -o openqasm-python-parser-$OPENQASM_VERSION -Dlanguage=Python3 -visitor qasm3Lexer.g4 qasm3Parser.g4
          tar -czf openqasm-python-parser-$OPENQASM_VERSION.tar.gz openqasm-python-parser-$OPENQASM_VERSION
          antlr4 -v $ANTLR4_VERSION -o openqasm-javascript-parser-$OPENQASM_VERSION -Dlanguage=JavaScript -visitor qasm3Lexer.g4 qasm3Parser.g4
          tar -czf openqasm-javascript-parser-$OPENQASM_VERSION.tar.gz openqasm-javascript-parser-$OPENQASM_VERSION
          cp openqasm-python-parser-$OPENQASM_VERSION.tar.gz ../../..
          cp openqasm-javascript-parser-$OPENQASM_VERSION.tar.gz ../../..
          cp -r openqasm-javascript-parser-$OPENQASM_VERSION ../../../pages

      - name: Install pandoc
        run: sudo apt-get install pandoc

      - name: Create index page and copy examples
        run: |
          pandoc README.md --standalone --metadata title="Parsers generated from OpenQASM specification" -o pages/index.html
          cp -r examples pages/

      - name: Upload artifact for pages
        id: deployment
        uses: actions/upload-pages-artifact@v3 # or specific "vX.X.X" version tag for this action
        with:
          path: pages/

      - name: Upload artifact for release
        uses: actions/upload-artifact@v4
        with:
          name: release
          if-no-files-found: error
          path: |
            openqasm-python-parser-${{env.OPENQASM_VERSION}}.tar.gz
            openqasm-javascript-parser-${{env.OPENQASM_VERSION}}.tar.gz

  deploy-pages:
    needs: build

    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  release:
    needs: build

    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')

    permissions:
      contents: write      # to make release

    runs-on: ubuntu-latest
    steps:
      - name: Download artifact for release
        uses: actions/download-artifact@v4
        with:
          name: release

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{env.OPENQASM_VERSION}}
          files: |
            openqasm-python-parser-${{env.OPENQASM_VERSION}}.tar.gz
            openqasm-javascript-parser-${{env.OPENQASM_VERSION}}.tar.gz
